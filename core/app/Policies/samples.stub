// one to many relationships authorization

    /**
     * @param User $user
     * @param Model $model
     *
     * @return bool
     */
    public function view( User $user, Model $model ): bool {
        return $user->can( $this->makeAbility() );
    }

    /**
     * @param User  $user
     * @param Model $model
     * @param Model $related
     *
     * @return bool
     */
    public function update( User $user, Model $model, Model $related ): bool {
        return $user->can( $this->makeAbility() );
    }

// has many relationships authorization

    /**
     * @param User $user
     * @param Model $model
     *
     * @return bool
     */
    public function view( User $user, Model $model ): bool {
        return $user->can( $this->makeAbility() );
    }

    /**
     * @param User  $user
     * @param Model $model
     * @param Collection $related
     *
     * @return bool
     */
    public function update( User $user, Model $model, Collection $related ): bool {
        return $user->can( $this->makeAbility() );
    }


// many to one relationships authorization

    /**
     * @param User  $user
     * @param Model $model
     *
     * @return bool
     */
    public function view( User $user,Model $model ): bool {
        return $user->can( $this->makeAbility() );
    }

    /**
     * @param User         $user
     * @param Model        $model
     * @param Collection $relation
     *
     * @return bool
     */
    public function update( User $user, Model $model, Collection $relation ): bool {
        return $user->can( $this->makeAbility() );
    }

    /**
     * @param User         $user
     * @param Model        $model
     * @param Collection $relation
     *
     * @return bool
     */
    public function attach( User $user, Model $model, Collection $relation ): bool {
        return $user->can( $this->makeAbility() );
    }

    /**
     * @param User         $user
     * @param Model        $model
     * @param Collection $relation
     *
     * @return bool
     */
    public function detach( User $user, Model $model, Collection $relation ): bool {
        return $user->can( $this->makeAbility() );
    }
